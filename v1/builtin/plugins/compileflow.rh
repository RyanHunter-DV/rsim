flow :compileflow do
	api :compile do |**opts|
		# setup options attribute of this plugin.
		@plugins[:compileflow].options(opts);
		## this will start executing the different steps
		@plugins[:compileflow].run;
	end

	step 'build_compile_cmd' do
		#self.instance_variable_set(:@simulator,Simulator.new());
		s=Rsim.simulator;
		steps=s.steps(:build);
		steps.each do |step|
			action :extern do
				configname = @options[:config].to_sym;
				cd = MetaData.outs[configname];
				compileCmd = %Q|#{s.eda}_#{step}.cmd|;
				cmd = %Q|cd #{cd};touch #{compileCmd};echo "#{s.command(step)}" > #{compileCmd}|
				cmd; # return the result of block as cmd string.
			end
		end
	end

	step 'compile' do
		after 'build_compile_cmd'
		s=Rsim.simulator;
		steps=s.steps(:compile);
		steps.each do |step|
			action :extern do
				configname = @options[:config].to_sym;
				cd = MetaData.outs[configname];
				compileCmd = %Q|#{s.eda}_#{step}.cmd|;
				cmd = %Q|cd #{cd};source #{compileCmd}|;
				cmd;
			end
		end
	end
	#step 'post_compile' do
	#	after 'compile'
	#end
end
